% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/languageEntropy.R
\name{languageEntropy}
\alias{languageEntropy}
\title{languageEntropy function}
\usage{
languageEntropy(data, id, ..., contextName = NULL, colsList = NULL,
  base = 2)
}
\arguments{
\item{data}{Your dataset}

\item{id}{ID column corresponding to the unique subject ID}

\item{...}{Columns of the dataset with proportions that will be used to compute
entropy. If using this argument, entropy will be computed across all
columns. Thus, these columns should pertain to a single context of language
usage in which proportions sum to 1. However, if you want to specify several groups
of columns to be converted independently, you may specify them in the
colsList argument instead.}

\item{contextName}{Name the context. This allows languageEntropy to name the resulting entropy column. Leave
this NULL if you use colsList.}

\item{colsList}{A list of grouped columns. Entropy will be computed
separately for each named group of columns. E.g.,
list(Home=c("L1Home","L2Home","L3Home"),
Work=c("L1Work","L2Work","L3Work")) will compute language entropy
independently for Home and Work, and the resulting columns will be named
based on what you write to the left of each equal sign.}

\item{base}{Base of the logarithm. Default is Shannon Entropy with base 2.
Other common bases are e (natural) and 10 (hartley).}
}
\description{
This function applies the simple entropy function to specified columns within
a dataset for each individual subject. The user should supply the column that
identifies the unique subject ID (id) as well as the columns of the dataset
that contain the data to be converted into entropy (...).
}
\details{
Note that entropy will be computed from proportions and these proportions
should sum to 1 within a usage context. There are various helper functions to
help you convert different types of data to proportions (likert2prop() and
percent2prop()).
}
\examples{
library(languageEntropy)
data(entropyExDataProp) # load example data with proportions

# first for the home context
entropyExDataProp <- languageEntropy(entropyExDataProp, sub, L1Home_prop, L2Home_prop, L3Home_prop, contextName = "Home")
print(entropyExDataProp)

# next for the work context
entropyExDataProp <- languageEntropy(entropyExDataProp, sub, L1Work_prop, L2Work_prop, L3Work_prop, contextName = "Work")
print(entropyExDataProp)

# finally for percent/proportion usage context
entropyExDataProp <- languageEntropy(entropyExDataProp, sub, L1PercentUse_prop, L2PercentUse_prop, L3PercentUse_prop, contextName = "PercentUse")
print(entropyExDataProp)

# alternatively, you can deal with home, work and percent at the same time
# by passing data for these contexts as separate vectors within a list
data(entropyExDataProp) #reload the data
entropyExData <- languageEntropy(entropyExData, sub,
colsList = list(Home=c("L1Home_prop", "L2Home_prop", "L3Home_prop"),
                Work=c("L1Work_prop","L2Work_prop","L3Work_prop"),
                PercentUse=c("L1PercentUse_prop", "L2PercentUse_prop", "L3PercentUse_prop")))
}
